pipeline {
    agent any

    environment {
        GITHUB_CREDENTIALS = 'github-creds'
        DOCKERHUB_CREDENTIALS = 'dockerhub-creds'
        DOCKER_IMAGE_NAME = 'ad1211/messaging-app:latest'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    credentialsId: "${GITHUB_CREDENTIALS}",
                    url: 'https://github.com/Isaac-1291/alx-backend-python.git'
            }
        }

        stage('Setup Python') {
            steps {
                sh 'python3 -m venv venv'
                sh 'pip3 install --upgrade pip'
                sh 'pip3 install -r messaging_app/requirements.txt'
            }
        }

        stage('Run Tests') {
            steps {
                sh './venv/bin/pytest messaging_app/tests/ --junitxml=report.xml'
            }
        }

        stage('Publish Report') {
            steps {
                junit 'report.xml'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t ${DOCKER_IMAGE_NAME} messaging_app/'
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: "${DOCKERHUB_CREDENTIALS}", usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
                    sh 'docker push ${DOCKER_IMAGE_NAME}'
                }
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: 'report.xml', allowEmptyArchive: true
        }
    }
}